[{"title":"build a react app","url":"/build-a-react-app/","content":"\n####  this.props.content\n\n\n\n#### scss support\n\n\n\n#### how user auth works\n","tags":["react"],"categories":["framework"]},{"title":"build a node restful api","url":"/build-a-node-restful-api/","content":"\n#### build dev env\n\n- nodemon\n> https://github.com/remy/nodemon\n```js\n\n// nodeamon\nnpm install --save-dev nodemon\n\ntouch nodemon.json\n\n{\n  \"restartable\": \"rs\",\n  \"ignore\": [\n    \".git\",\n    \"node_modules/**/node_modules\"\n  ],\n  \"verbose\": true,\n  \"execMap\": {\n    \"js\": \"node --harmony\" // support es6\n  },\n  \"events\": {\n    \"restart\": \"osascript -e 'display notification \\\"App restarted due to:\\n'$FILENAME'\\\" with title \\\"nodemon\\\"'\"\n  },\n   // By default nodemon monitors the current working directory. If you want to take control of that option, use the --watch option to add specific paths:\n  \"watch\": [\n    \"test/fixtures/\",\n    \"test/samples/\"\n  ],\n  \"env\": {\n    \"NODE_ENV\": \"development\"\n  },\n  \"ext\": \"js,json\"\n}\n\n\n\n```\n- cross-env\n> Run scripts that set and use environment variables across platforms\n```js\n//package.json\n\"start\": \"cross-env NODE_ENV=production node server.js\",\n\"dev\": \"cross-env NODE_ENV=development nodemon --inspect server.js\"\n```\n","tags":["restful api"]},{"title":"how does react serviceWorker works","url":"/how-does-react-serviceWorker-works/","content":"\n#### serviceWorker \n> https://zhuanlan.zhihu.com/p/23966686\n\n```js\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n```\n","tags":["react"],"categories":["framework"]},{"title":"how to use mongoose","url":"/how-to-use-mongoose/","content":"\n#### Schemas\n\n```js\n\nconst mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\n// Define collection and schema for Course\nvar Test = new Schema({\n    course_name: {\n        type: String\n    },\n    course_price: {\n        type: Number\n    }\n},{\n    timestamps: true,\n    collection: 'test'\n});\n\nmodule.exports = mongoose.model('Test', Test);\n\n```\n\n#### three way to get req parameters\n> https://i5ting.github.io/node-http/#106\n\n```js\n\n// req.body.xxx \n// has to be post requset\nvar app = require('express')();\nvar bodyParser = require('body-parser');\nvar multer = require('multer'); \n\napp.use(bodyParser.json()); // for parsing application/json\napp.use(bodyParser.urlencoded({ extended: true })); // for parsing application/x-www-form-urlencoded\napp.use(multer()); // for parsing multipart/form-data\n\napp.post('/', function (req, res) {\n  console.log(req.body);\n  res.json(req.body);\n})\n\n// req.query.xxx\nGET /search?q=tobi+ferret\nGET /shoes?order=desc&shoe[color]=blue&shoe[type]=converse\n\n// req.params.xxx\napp.get('/user/:id', function(req, res){\n  res.send('user ' + req.params.id);\n});\n\n```\n","tags":["mongoose"],"categories":["database"]},{"title":"deploy web app on heroku","url":"/deploy-web-app-on-heroku/","content":"\n\n#### get started with nodejs\n\n```bash\n\n# install\nnpm install -g heroku\n\n# login \nheroku login\n\n# create\nheroku create\n\n# push\ngit push heroku master\n\n# Ensure that at least one instance of the app is running:\nheroku ps:scale web=1\nheroku ps:scale web=0 # no app running\n\n# vist on broswer\nheroku open\n\n# logs\nheroku logs --tail\n\n# procfile - to explicitly declare what command should be executed to start your app.\nweb: node index.js\n\n# run app locally\nheroku local web\n\n# push changes\n\ngit add .\ngit commit -m 'commits'\ngit push heroku master\n\n# bash\nheroku run bash\n\n\n# deploy react apps\ntouch Procfile\nweb: npm start\n\n# branch not updating?\ngit push heroku local_branch_name:master\n\n\n# clear build cache\nheroku config:set NODE_MODULES_CACHE=false\ngit commit -am 'disable node_modules cache' --allow-empty\n\n# addons\nheroku addons:create mongolab # will generate a MONGODB_URI\nheroku config #check configs\nMONGODB_URI: mongodb://<dbuser>:<dbpassword>@ds259787.mlab.com:59787/heroku_pgd6txgv\n\n# DB config\nmodule.exports = {\n    secret:'paultest',\n    DB: process.env.MONGODB_URI|| 'mongodb://localhost:27017/test'\n}\n\n\n```","tags":["heroku"],"categories":["deploy"]},{"title":"vue test common issues","url":"/vue-test-common-issues/","content":"\n\n#### vue event affect\n\nif two component both has attched the same event, it will affect each other","tags":["vue-test"],"categories":["vue"]},{"title":"Update partial Object Array","url":"/es6/","content":"\n\n#### Aarry prototypes\n\n\n> **forEach** for doing a thing with or to every entry in an array;\n> **filter** for producing a new array containing only qualifying entries;\n> **map** for making a one-to-one new array by transforming an existing array;\n> **some** to check whether at least one element in an array fits some description;\n> **every** to check whether all entries in an array match a description;\n> **find** to look for a value in an array\n\n\n#### e.g.\n```js\n\n// map\n\nlet arr = [{a:'1'}, {b: '2'}]\n\narr = arr.map(item => {\n    if(item.a=== '1') return Object.assign(item, {c: '3'})\n    return item // if not return will get undefined\n})\n\nconsole.log(arr) \n//output\n// 0: {a: \"1\", c: \"3\"}\n// 1: {b: \"2\"}\n\n\n// for each\n\nlet arr = [{a:'1'}, {b: '2'}]\n\narr.forEach((item, index, arr)  => {\n    if(item.a=== '1') arr[index] = {c: '3'}\n})\n\nconsole.log(arr) \n//output\n// 0: {c: \"3\"}\n// 1: {b: \"2\"}\n```","tags":["es6"]},{"title":"http","url":"/http/","content":"\n## HTTP headers\n\n#### Content-Disposition\nContent-Disposition 消息头指示回复的内容该以何种形式展示，是以内联的形式（即网页或者页面的一部分），还是以附件的形式下载并保存到本地。[learn more](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Disposition)\n\n\n\n## HTTP Status Code\n\n#### 304 Not Modified\n\nHTTP 304 未改变说明无需再次传输请求的内容，也就是说可以使用缓存的内容。这通常是在一些安全的方法（safe），例如GET 或HEAD 或在请求中附带了头部信息： If-None-Match 或If-Modified-Since。\n\n如果是 200 OK ，响应会带有头部 Cache-Control, Content-Location, Date, ETag, Expires，和 Vary.\n\n> 很多浏览器的 开发者工具 会发出额外的请求，以达到 304 的目的，这样可以把资源以本地缓存的形式展现给开发者。","tags":["http"],"categories":["frontend"]},{"title":"vscode plugins","url":"/vscode-plugins/","content":"\n\n## Vscode Plugins\n\n\n#### Autoprefixer\n\n*Useage*\n\n```bash\n# install autoprefixer\n\nnpm install -g|-D autoprefixer\n\n# set shortcuts key\n\nFile > Preferences > keyboard shotcuts # search *autoprefixer* and set any key you like\n\n# supported type\n\n- css\n- less\n- scss\n\n\n```\n","tags":["vscode"],"categories":["tools"]},{"title":"css tricks","url":"/css-tricks/","content":"\n## column layout\n\n```less\n.wrap {\n  column-count: 3;\n  column-gap: 10px;\n}\n.item {\n  box-sizing: border-box;\n  break-inside: avoid;\n}\n\n// break-inside: avoid; box-shadow is not fully display\n// [box-shadow partially broken](https://stackoverflow.com/questions/47310583/break-inside-avoid-not-working-with-padding-in-edge)\n// backface-visibility:hidden; ---- not working\n\n// fix  https://stackoverflow.com/questions/17881923/box-shadow-trimmed-in-css-columns-in-chrome\n transform: translateZ(0);\n\n```\n## remove browser autocomplete\n\nautocomplete 属性规定输入字段是否应该启用自动完成功能。\n\n自动完成允许浏览器预测对字段的输入。当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。\n\n\n\n```html\n<!-- 注释：autocomplete 属性适用于 <form>，以及下面的 <input> 类型：text, search, url, telephone, email, password, datepickers, range 以及 color。 -->\n<input autocomplete=\"off\">\n```","tags":["css"],"categories":["frontend"]},{"title":"customize hexo theme","url":"/hexo-theme/","content":"*customeize hexo theme arrange (a group of people or things) in classes or categories according to shared qualities or characteristics.*\n<!-- more -->\n#### scaffolds\n```\n|--- pulse\n|    |--- languages\n|         |--- en.yml\n|         |--- zh-CN.yml\n|    |--- layout\n|         |--- _partial\n|              |--- article.ejs\n|              |--- header.ejs\n|              |--- footer.ejs\n|              |--- side.ejs\n|         |--- index.ejs\n|         |--- post.ejs\n|         |--- page.ejs\n|         |--- archive.ejs\n|         |--- layout.ejs\n|    |--- scripts\n|    |--- source\n|    |--- _config.yml\n```\n\n#### ejs\n\n#### Partial [局部模版](https://hexo.io/zh-cn/docs/templates.html#%E5%B1%80%E9%83%A8%E6%A8%A1%E7%89%88%EF%BC%88Partial%EF%BC%89)\n```bash\n# with params\n<%- partial('_partial/footer', null, {cache: !config.relative_link}) %>   # Fragment Caching\n\n<%- partial('header', {}, {cache: true});\n\n```\n\n#### layout\n\n```html\n\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n\n```\n#### [variables](https://hexo.io/zh-cn/docs/variables)\n\n```bash\n# use config variables\n<%- config.var %>\n\n# use theme variables\n<%- theme.var %>\n\n```\n\n#### helpers\n\n```bash\n# load css\n\n<%- css(path) %>\n<%- css([path1, path2]) %>\n\n\n# url_for\n\n<%- url_for(path) %>\n\n\n```\n\n\n#### sass support\n\n```bash\n npm install --save hexo-renderer-sass\n\n```\n\n\n#### search\n\n","tags":["hexo"],"categories":["frontend"]}]