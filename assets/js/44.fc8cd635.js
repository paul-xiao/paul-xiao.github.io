(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{364:function(s,t,n){"use strict";n.r(t);var a=n(25),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h4",{attrs:{id:"todos"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#todos"}},[s._v("#")]),s._v(" todos")]),s._v(" "),n("ul",[n("li",[s._v("[x] 权限管理")]),s._v(" "),n("li",[s._v("[ ] 图片上传(ipfs?)")]),s._v(" "),n("li",[s._v("[ ] 备注")]),s._v(" "),n("li",[s._v("[ ] 评论")]),s._v(" "),n("li",[s._v("[ ] 分类(tags/dates)")])]),s._v(" "),n("h4",{attrs:{id:"express-session-passport-mongo-auth"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#express-session-passport-mongo-auth"}},[s._v("#")]),s._v(" express-session/passport/mongo auth")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# scaffold")]),s._v("\n\n├── config\n│   ├── index.js\n│   └── passport.js\n├── controller\n│   └── user.js\n├── curl.sh\n├── index.js\n├── model\n│   ├── Post.js\n│   └── User.js\n├── nodemon.json\n├── package.json\n├── utils\n│   └── logger.js\n└── yarn.lock\n\n")])])]),n("p",[n("strong",[s._v("steps for passport auth")])]),s._v(" "),n("ul",[n("li",[s._v("init express-session")]),s._v(" "),n("li",[s._v("save session in mongo")]),s._v(" "),n("li",[s._v("add mongo schema")]),s._v(" "),n("li",[s._v("init passport")]),s._v(" "),n("li",[s._v("add LocalStrategy")]),s._v(" "),n("li",[s._v("passport auth")]),s._v(" "),n("li",[s._v("update mongo")])]),s._v(" "),n("h4",{attrs:{id:"ipfs-原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ipfs-原理"}},[s._v("#")]),s._v(" ipfs 原理")]),s._v(" "),n("h4",{attrs:{id:"init-ipfs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#init-ipfs"}},[s._v("#")]),s._v(" Init ipfs")]),s._v(" "),n("ol",[n("li",[s._v("install")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# download go-ipfs https://dist.ipfs.io/#go-ipfs")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unzip file")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xvfz go-ipfs_v0.4.23_linux-amd64.tar.gz\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# win10 install ipfs")]),s._v("\nhttps://gist.github.com/drwasho/ca224cbd4a21440f7cc1245e594398e4\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# install")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" go-ipfs/\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ./install.sh\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check")]),s._v("\n\nipfs "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("init ipfs")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# init")]),s._v("\n$ ipfs init\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" initializing IPFS node at /home/paul.xiao/.ipfs\ngenerating "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v("-bit RSA keypair"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".done\npeer identity: QmXRTizcrNhUaLYq52hqHCbxykD4rn8Rq5TN9d9PDR4HvB\nto get started, enter:\n\n\tipfs "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /ipfs/QmS4ustL54uo8FzR9455qaxZwuMiUhyvMcX9Ba8nUH4uVv/readme*\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check pin list")]),s._v("\n\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" --type"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("all\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" QmXgqKTbzdh83pQtKFb19SpMCpDDcKR2ujqk3pKph9aCNF indirect\n  QmNU3nhLTUxK96coALJtPi5Cprrr416rr5YgkqKUYRobe9 recursive // 递归\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# There are three types of pins in the ipfs world; direct pins, which pin just a single block, and no others in relation to it. recursive pins, which pin a given block and all of its children, and indirect pins, which are the result of a given blocks parent being pinned recursively.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove pins")]),s._v("\n$ ipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" QmNU3nhLTUxK96coALJtPi5Cprrr416rr5YgkqKUYRobe9\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" unpinned QmNU3nhLTUxK96coALJtPi5Cprrr416rr5YgkqKUYRobe9\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gc")]),s._v("\n\nipfs repo gc\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# start a daemon")]),s._v("\n\nipfs daemon\n\nlocalhost:8080/ipfs/"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${hash}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list DAG (see refs [1])")]),s._v("\nipfs "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${hash}")]),s._v("\n\n")])])]),n("h4",{attrs:{id:"configs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configs"}},[s._v("#")]),s._v(" configs")]),s._v(" "),n("ol",[n("li",[s._v("bootstrap list")])]),s._v(" "),n("blockquote",[n("p",[s._v("The IPFS bootstrap list is a list of peers with which the IPFS daemon learns about other peers on the network. IPFS comes with a default list of trusted peers, but you are free to modify the list to suit your needs. One popular use for a custom bootstrap list is to create a personal IPFS network.")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list")]),s._v("\n\nipfs bootstrap list\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add a new peer to the bootstrap list:")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" /ip4/25.196.147.100/tcp/4001/p2p/QmaMqSwWShsPg2RbredZtoneFjXhim7AQkqbLxib45Lx4S\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove a node from the bootstrap list:")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" /ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Let’s say we want to create a backup of our new bootstrap list. We can easily do this by redirecting stdout of ipfs bootstrap list to a file:")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ipfs bootstrap list "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("save\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If we ever want to start from scratch, we can delete the entire bootstrap list at once:")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --all\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#With an empty list, we can restore the default bootstrap list:")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --default\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Remove the entire bootstrap list again, and restore our saved one by piping the contents of the saved file to ipfs bootstrap add:")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --all\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" save "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" ipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("\n\n\n")])])]),n("h4",{attrs:{id:"ipfs-private-network"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ipfs-private-network"}},[s._v("#")]),s._v(" ipfs private network")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. generator swarm key")]),s._v("\n\ngo get -u github.com/Kubuxu/go-ipfs-swarm-key-gen/ipfs-swarm-key-gen\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~\n\n./go/bin/ipfs-swarm-key-gen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ~/.ipfs/swarm.key\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. update bootstrap node")]),s._v("\n\nipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --all "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove all exist node")]),s._v("\nipfs config show "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PeerID"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# peer identity hash of bootnode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" -I "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ip address of bootnode")]),s._v("\nipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" /ip4/"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ip address of bootnode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/tcp/4001/ipfs/"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("peer identity "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("hash")]),s._v(" of bootnode"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add new node")]),s._v("\nipfs bootstrap "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" /ip4/172.20.10.2/tcp/4001/ipfs/QmRk7cmDmq7TspqtyAbnYPeM7z24FCiWx21VE2nJfG6mNY "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add new node")]),s._v("\n\nipfs boostrap list\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. check speed")]),s._v("\n\nipfs swarm peers  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check connected peers")]),s._v("\n\nipfs get "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hash"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -o "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n")])])]),n("h4",{attrs:{id:"upload-file-with-ipfs-and-node-js-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#upload-file-with-ipfs-and-node-js-2"}},[s._v("#")]),s._v(" upload file with ipfs and node js [2]")]),s._v(" "),n("blockquote",[n("p",[s._v("based on ipfs-http-client 43.0.1")])]),s._v(" "),n("ol",[n("li",[s._v("repo gc useage")])]),s._v(" "),n("p",[s._v("refs:")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of",target:"_blank",rel:"noopener noreferrer"}},[s._v("for await ...of"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncIterator",target:"_blank",rel:"noopener noreferrer"}},[s._v("AsyncIterator"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/REPO.md#repogc",target:"_blank",rel:"noopener noreferrer"}},[s._v("repo gc"),n("OutboundLink")],1)]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// gc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" res "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" ipfs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("repo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("gc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h4",{attrs:{id:"ipfs-state"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ipfs-state"}},[s._v("#")]),s._v(" ipfs state")]),s._v(" "),n("p",[s._v("文件块 的 5 种 Pin 状态")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("Recursive 状态\n文件块树被递归添加到 pin 中，根文件块的状态是 Recursive，非根文件块的状态是 Indirect")])]),s._v(" "),n("li",[n("p",[s._v("Direct 状态\n只有目标文件块添加到 pin 中, 子孙块不做处理，目标文件块的状态就是 Direct")])]),s._v(" "),n("li",[n("p",[s._v("Indirect 状态\n文件块树被递归添加到 pin 中，根文件块的状态是 Recursive，非根文件块的状态是 Indirect")])]),s._v(" "),n("li",[n("p",[s._v("Internal 状态\nipfs 使用文件块来保存 pinner 状态，这些文件块的状态就是 Internal")])]),s._v(" "),n("li",[n("p",[s._v("NotPinned 状态\n文件块没有被 pin，在 GC 时会被删除")])])]),s._v(" "),n("h4",{attrs:{id:"pin-unpin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pin-unpin"}},[s._v("#")]),s._v(" pin/unpin")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 展示")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 列出所有被 pin 的块")]),s._v("\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 列出 pin 为指定状态的块")]),s._v("\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -t direct\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -t indirect\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -t recursive\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 递归 pin")]),s._v("\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" QmZ98HahPRKRcfoYoJchZNKzFxSHFWw6WxvQc1hpFEoFca\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 直接 pin(只 pin 指定 hash 的文件块)")]),s._v("\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --recursive"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false QmZ98HahPRKRcfoYoJchZNKzFxSHFWw6WxvQc1hpFEoFca\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移除")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 递归从 pin 中移除")]),s._v("\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" QmZ98HahPRKRcfoYoJchZNKzFxSHFWw6WxvQc1hpFEoFca\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 直接从 pin 中移除")]),s._v("\nipfs pin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --recursive"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false QmZ98HahPRKRcfoYoJchZNKzFxSHFWw6WxvQc1hpFEoFca\n")])])]),n("h4",{attrs:{id:"refs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#refs"}},[s._v("#")]),s._v(" refs")]),s._v(" "),n("ol",[n("li",[n("a",{attrs:{href:"https://docs.ipfs.io/guides/concepts/merkle-dag/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Merkle DAG"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://steemit.com/utopian-io/@hsynterkr/ipfs-tutorial-2-build-a-nodejs-app-for-ipfs",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node app with ipfs"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://www.jianshu.com/p/3f7cc1ee9ec4",target:"_blank",rel:"noopener noreferrer"}},[s._v("IPFS 原理"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://medium.com/@s_van_laar/deploy-a-private-ipfs-network-on-ubuntu-in-5-steps-5aad95f7261b",target:"_blank",rel:"noopener noreferrer"}},[s._v("ipfs private network"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/ipfs/js-ipfs/issues/2985",target:"_blank",rel:"noopener noreferrer"}},[s._v("repo gc version issue"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);